docker run -d --name mailer dockerinaction/ch2_mailer

docker run --detach --name web nginx:latest

Si desea eliminar solo los contenedores con un estado de exited : 
docker rm $(docker ps --all -q -f status=exited)

docker run --interactive --tty --link web:web --name web_test busybox:latest /bin/sh

docker run -it --name agent --link web:insideweb --link mailer:insidemailer dockerinaction/ch2_agent

docker create --cidfile /tmp/web.cid nginx

MAILER_CID=$(docker run -d dockerinaction/ch2_mailer)
WEB_CID=$(docker create nginx)
AGENT_CID=$(docker create --link $WEB_CID:insideweb --link $MAILER_CID:insidemailer dockerinaction/ch2_agent)

docker start $AGENT_CID
docker start $WEB_CID

install wordpress 4 read-only
docker run -d --name wp --read-only wordpress:4

verificar si un container is running
docker inspect --format "{{.State.Running}}" wp

docker run --env MY_ENVIRONMENT_VAR="this is a test" busybox:latest env

variables ENV Wordpress:
WORDPRESS_DB_HOST
WORDPRESS_DB_USER
WORDPRESS_DB_PASSWORD
WORDPRESS_DB_NAME
WORDPRESS_AUTH_KEY
WORDPRESS_SECURE_AUTH_KEY
WORDPRESS_LOGGED_IN_KEY
WORDPRESS_NONCE_KEY
WORDPRESS_AUTH_SALT
WORDPRESS_SECURE_AUTH_SALT
WORDPRESS_LOGGED_IN_SALT
WORDPRESS_NONCE_SALT

docker create \
--env WORDPRESS_DB_HOST=<my database hostname> \
--env WORDPRESS_DB_USER=site_admin \
--env WORDPRESS_DB_PASSWORD=MeowMix42 \
wordpress:4